---
import type { GetProductsQuery } from "api.generated";
import { request } from "graphql-request";
import ProductImage from "@/components/ProductImage";
import ProductPrice from "@/components/ProductPrice";
import getProducts from "@/graphql/products.gql";
import i18n from "@/i18n";
import { Button } from "@/components/form/Button";

interface Props {
  showButton?: true;
  first?: number;
}

const { showButton, first } = Astro.props;

const {
  products: { nodes: products },
} = await request<GetProductsQuery>("https://mock.shop/api", getProducts, {
  first,
});
---

<section class="my-8 flex flex-col gap-5">
  <h2 class="text-2xl">{i18n.t("You may also like")}</h2>
  <ul class="grid grid-cols-2 gap-6 md:grid-cols-4">
    {
      products.map(
        ({
          handle,
          featuredImage,
          title,
          variants: {
            nodes: [
              {
                price: { amount, currencyCode },
              },
            ],
          },
        }) => (
          <li class="relative">
            <ProductImage src={featuredImage!.url as string} alt={title} />
            <h3>
              <a
                class="after:absolute after:inset-0 after:z-10 hover:underline after:content-empty"
                href={`/${i18n.language}/products/${handle}`}
              >
                {title}
              </a>
            </h3>
            <ProductPrice amount={amount as string} currency={currencyCode} />
          </li>
        )
      )
    }
  </ul>
  {
    showButton && (
      <div class="mt-5 flex flex-col items-center">
        <Button href={`/${i18n.language}/collections/all`}>
          {i18n.t("View all")}
        </Button>
      </div>
    )
  }
</section>
